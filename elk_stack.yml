---
- name: Enable elasticsearch dual-node systemd daemon
  hosts: all
  become: true
  tasks:
    - name: Create Elasticsearch user
      user:
        comment: Elasticsearch daemon  account
        name: elasticsearch
        group: elastic
        state: present
    - name: Create Kibana user
      user:
        comment: Kibana daemon  account
        name: kibana
        group: elastic
        state: present
    - name: Create Logstash user
      user:
        comment: Logstash daemon  account
        name: logstash
        group: elastic
        state: present
    - name: Create Elastic group
      group:
        name: elastic
        state: present
    - name: Create Elasticsearch installation directory
      file:
        path: /opt/elasticsearch
        state: directory
        owner: elasticsearch
        group: elastic
    - name: Create Kibana installation directory
      file:
        path: /opt/kibana
        state: directory
        owner: kibana
        group: elastic
    - name: Create Logstash installation directory
      file:
        path: /opt/logstash
        state: directory
        owner: logstash
        group: elastic
    - name: Extract Elasticsearch binaries
      unarchive:
        src: https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-linux-x86_64.tar.gz
        dest: /opt/elasticsearch
        owner: elasticsearch
        group: elastic
        mode: '0775'
        remote_src: yes
        extra_opts:
          - --strip-components
          - '1'
    - name: Extract Kibana binaries
      unarchive:
        src: https://artifacts.elastic.co/downloads/kibana/kibana-7.4.0-linux-x86_64.tar.gz
        dest: /opt/kibana
        owner: kibana
        group: elastic
        mode: '0775'
        remote_src: yes
        extra_opts:
          - --strip-components
          - '1'
    - name: Extract Logstash binaries
      unarchive:
        src: https://artifacts.elastic.co/downloads/logstash/logstash-7.4.0.tar.gz
        dest: /opt/logstash
        owner: logstash
        group: elastic
        mode: '0775'
        remote_src: yes
        extra_opts:
          - --strip-components
          - '1'
    - name: Create Elasticsearch working directory
      file:
        path: /var/elasticsearch
        state: directory
        owner: elasticsearch
        group: elastic
    - name: Create Kibana working directory
      file:
        path: /var/kibana
        state: directory
        owner: kibana
        group: elastic
    - name: Create Logstash working directory
      file:
        path: /var/logstash
        state: directory
        owner: logstash
        group: elastic
  roles:
    - role: devoinc.systemd_service
      become: true
      systemd_service:
        elasticsearch:
          # Start the service on boot
          enabled: Yes
          # Execute the command with specified arguments when the service is started
          exec_start: "/opt/elasticsearch/bin/elasticsearch --verbose"
          working_directory: "/var/elasticsearch"
          user: "elasticsearch"
          group: "elastic"
          # Restart the service only when a clean exit code or signal wasn't gotten
          restart: "on-failure"
          # multi-user.target unit prefers the service to be run
          wanted_by: "multi-user.target"
        kibana:
          # Start the service on boot
          enabled: Yes
          # Execute the command with specified arguments when the service is started
          exec_start: "/opt/kibana/bin/kibana --verbose"
          working_directory: "/var/kibana"
          user: "kibana"
          group: "elastic"
          # Restart the service only when a clean exit code or signal wasn't gotten
          restart: "on-failure"
          # multi-user.target unit prefers the service to be run
          wanted_by: "multi-user.target"
        logstash:
          # Start the service on boot
          enabled: Yes
          # Execute the command with specified arguments when the service is started
          exec_start: "/opt/logstash/bin/logstash -f /var/logstash/pipeline.conf"
          working_directory: "/var/logstash"
          user: "logstash"
          group: "elastic"
          # Restart the service only when a clean exit code or signal wasn't gotten
          restart: "on-failure"
          # multi-user.target unit prefers the service to be run
          wanted_by: "multi-user.target"
