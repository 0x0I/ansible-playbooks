---
- name: Render customized development configuration
  hosts: all
  become: true
  roles:
    - role: 0x0i.vim
      become: true
      vars:
        vimrc_config:
          global:
            - comment: "Disable compatibility with vi"
              commands:
                - "set": "nocompatible"
          awilson:
            - comment: "Disable compatibility with vi"
              commands:
                - "set": "nocompatible"
            - comment: "Help force plugins to load correctly when re-enabled below"
              commands:
                - "filetype": "off"
            - comment: "enable syntax processing"
              commands:
                - "syntax": "enable"
            - comment: "spaces and tabs"
              commands:
                - "set": "tabstop=4"
                - "set": "softtabstop=4"
                - "set": "expandtab"
            - comment: "searching"
              commands:
                - "set": "incsearch"
                - "set": "hlsearch"
                - "set": "ignorecase"
                - "set": "smartcase"
                - "set": "showmatch"
                - "nnoremap": "<leader><space> :nohlsearch<CR>"
            - comment: "folding"
              commands:
                - "set": "foldenable"
                - "set": "foldlevelstart=10"
                - "set": "foldnestmax=10"
                - "nnoremap": "<space> za"
                - "set": "foldmethod=marker"
            - comment: "ui config"
              commands:
                - "set": "number"
                - "set": "ttyfast"
                - "set": "laststatus=2"
                - "set": "showcmd"
                - "set": "showmode"
                - "set": "cursorline"
                - "filetype": "indent on"
                - "set": "wildmenu"
                - "set": "ruler"
                - "set": "visualbell"
                - "set": "encoding=utf-8"
                - "set": "lazyredraw"
            - comment: "movement"
              commands:
                - "nnoremap": "j gj"
                - "nnoremap": "k gk"
                - "nnoremap": "B ^"
                - "nnoremap": "E $"
                - "nnoremap": "gV `[v`]"
            - comment: "leader shortcuts"
              commands:
                - "let": 'mapleader=","'
                - "set": "cursorline"
                - "nnoremap": "<leader>u :GundoToggle<CR>"
                - "nnoremap": "<leader>ev :vsp $MYVIMRC<CR>"
                - "nnoremap": "<leader>eb :vsp ~/.bashrc<CR>"
                - "nnoremap": "<leader>sv :source $MYVIMRC<CR>"
                - "nnoremap": "<leader>s :mksession<CR>"
                - "nnoremap": "<leader>a :Ag"
            - comment: "Plugins"
              commands:
                - "set": "rtp+=~/.vim/bundle/Vundle.vim"
                - "call": "vundle#begin()"
                - "Plugin": "'VundleVim/Vundle.vim'"
                - "Plugin": "'scrooloose/nerdtree'"
                - "Plugin": "'ErichDonGubler/vim-sublime-monokai'"
                - "Plugin": "'joshdick/onedark.vim'"
                - "Plugin": "'vim-syntastic/syntastic'"
                - "Plugin": "'rking/ag.vim'"
                - "Plugin": "'ctrlpvim/ctrlp.vim'"
                - "Plugin": "'sjl/gundo.vim'"
                - "call": "vundle#end()"
                - "filetype": "plugin indent on"
            - comment: "NERDTree settings"
              commands:
                - "autocmd": "vimenter * NERDTree"
                - "autocmd": "vimEnter * wincmd p"
                - "autocmd": 'bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif'
                - "map": "<C-n> :NERDTreeToggle<CR>"
            - comment: "syntastic settings"
              commands:
                - "let": "g:syntastic_python_python_exec = 'python3'"
            - comment: "allow cursor change in tmux mode"
              commands:
                - function!: |
                    <SID>StripTrailingWhitespaces()
                       " save last search & cursor position
                       let _s=@/
                       let l = line(".")
                       let c = col(".")
                       %s/\s\+$//e
                       let @/=_s
                       call cursor(l, c)
                    endfunction
            - comment: "autogroups"
              commands:
                - augroup: |
                    configgroup
                       autocmd!
                       autocmd VimEnter * highlight clear SignColumn
                       autocmd BufWritePre *.php,*.py,*.js,*.txt,*.hs,*.java,*.md :call <SID>StripTrailingWhitespaces()

                       autocmd FileType java setlocal noexpandtab
                       autocmd FileType java setlocal list
                       autocmd FileType java setlocal listchars=tab:+\ ,eol:-
                       autocmd FileType java setlocal formatprg=par\ -w80\ -T4

                       autocmd FileType php setlocal expandtab
                       autocmd FileType php setlocal list
                       autocmd FileType php setlocal listchars=tab:+\ ,eol:-
                       autocmd FileType php setlocal formatprg=par\ -w80\ -T4

                       autocmd FileType ruby setlocal tabstop=2
                       autocmd FileType ruby setlocal shiftwidth=2
                       autocmd FileType ruby setlocal softtabstop=2
                       autocmd FileType ruby setlocal commentstring=#\ %s

                       autocmd FileType python setlocal commentstring=#\ %s

                       autocmd BufEnter *.cls setlocal filetype=java
                       autocmd BufEnter *.zsh-theme setlocal filetype=zsh
                       autocmd BufEnter Makefile setlocal noexpandtab
                       autocmd BufEnter *.sh setlocal tabstop=2
                       autocmd BufEnter *.sh setlocal shiftwidth=2
                       autocmd BufEnter *.sh setlocal softtabstop=2
                    augroup END
            - comment: "set color-scheme"
              commands:
                - "colorscheme": "onedark"
                - "set": "t_Co=256"
    - role: 0x0i.tmux
      become: true
      vars:
        tmux_config:
          awilson:
            - comment: "Add ctrl-A as secondary prefix key"
              commands:
                - "set": "-g prefix2 C-a"
                - "bind": "C-a send-prefix -2"
            - comment: "Bind current vertical/horizontal split-window keys to values not requiring ^(shift)"
              commands:
                - "bind": "- split-window -v"
                - "bind": "/ split-window -h"
            - comment: "More convenient macros for general operations"
              commands:
                - "bind": "C-n new-session"
                - "bind": "C-w new-window"
                - "bind": "C-d detach-client"
                - "bind": "C-p paste-buffer"
                - "bind": "R refresh-client"
                - "unbind": "r; bind r source-file ~/.tmux.conf"
            - comment: "set first window to index 1 (not 0) to map more to the keyboard layout"
              commands:
                - "set": "-g base-index 1"
                - "set": "-g pane-base-index 1"
            - comment: "Enable use of the mouse to switch panes"
              commands:
                - "setw": "-g mouse"
            - comment: "Enable Switching panes with alt"
              commands:
                - "bind": "-n M-Left select-pane -L"
                - "bind": " -n M-Right select-pane -R"
                - "bind": "-n M-Up select-pane -U"
                - "bind": "-n M-Down select-pane -D"
            - comment: "Visual Activity Monitoring between windows"
              commands:
                - "setw": "-g monitor-activity on"
                - "set": "-g visual-activity on"
            - comment: "install TPM plugin manager"
              commands:
                - "set": "-g @plugin 'tmux-plugins/tpm'"
            - comment: "tmux-resurrect - save and reload sessions and windows after a restart"
              commands:
                - "set": "-g @plugin 'tmux-plugins/tmux-resurrect'"
                - "set": "-g @resurrect-strategy-vim 'session'"
                - "set": "-g @resurrect-capture-pane-contents 'on'"
                - "set": "-g @resurrect-save-bash-history 'on'"
            - comment: "tmux-continuum - automatically save and restore tmux sessions"
              commands:
                - "set": "-g @plugin 'tmux-plugins/tmux-continuum'"
                - "set": "-g @continuum-restore 'on'"
                - "set": "-g @continuum-save-interval '5'"
            - comment: "tmux-yank - advanced copy mode"
              commands:
                - "set": "-g @plugin 'tmux-plugins/tmux-yank'"
            - comment: "tmux-sidebar - provides tree view for inspecting current path/filesystem"
              commands:
                - "set": "-g @plugin 'tmux-plugins/tmux-sidebar'"
            - comment: "tmux-open - opening highlighted selection directly from Tmux copy mode"
              commands:
                - "set": "-g @plugin 'tmux-plugins/tmux-open'"
            - comment: "tmux-copycat - advanced regex searching"
              commands:
                - "set": "-g @plugin 'tmux-plugins/tmux-copycat'"
            - comment: "initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)"
              commands:
                - "run": "'~/.tmux/plugins/tpm/tpm'"
